version: 2
workflows:
  version: 2
  tests:
    jobs: &master_and_releases
      - node4:
          filters: &all_commits
            tags:
              only: /.*/
      - node6:
          filters: *all_commits
      - node8:
          filters: *all_commits
      - node9:
          filters: *all_commits
      - node10:
          filters: *all_commits
      - lint:
          requires:
            - node4
            - node6
            - node8
            - node9
            - node10
          filters: *all_commits
      - docs:
          requires:
            - node4
            - node6
            - node8
            - node9
            - node10
          filters: *all_commits
      - publish_npm:
          requires:
            - lint
            - docs
          filters:
            branches:
              ignore: /.*/
            tags:
              only: '/^v[\d.]+$/'
  nightly:
    triggers:
      - schedule:
          cron: 0 7 * * *
          filters:
            branches:
              only: master
    jobs: *master_and_releases
jobs:
  node4:
    docker:
      - image: 'node:4'
        user: node
    steps: &releases
      - checkout
      - run: &workflow_jobs
          name: Remove package-lock.json if needed.
          command: |
            WORKFLOW_NAME=`python .circleci/get_workflow_name.py`
            echo "Workflow name: $WORKFLOW_NAME"
            if [ "$WORKFLOW_NAME" = "nightly" ]; then
              echo "Nightly build detected, removing package-lock.json."
              rm -f package-lock.json samples/package-lock.json
            else
              echo "Not a nightly build, skipping this step."
            fi
      - run: &unit_tests_steps
          name: Install and link the module
          command: |-
            mkdir -p /home/node/.npm-global
            npm install
            npm link
            chmod +x node_modules/@google-cloud/nodejs-repo-tools/bin/tools
          environment:
            NPM_CONFIG_PREFIX: /home/node/.npm-global
      - run:
          name: Run unit tests.
          command: npm run test-only
      - run:
          name: Submit coverage data to codecov.
          command: node_modules/.bin/codecov
          when: always
  node6:
    docker:
      - image: 'node:6'
        user: node
    steps: *releases
  node8:
    docker:
      - image: 'node:8'
        user: node
    steps: *releases
  node9:
    docker:
      - image: 'node:9'
        user: node
    steps: *releases
  node10:
    docker:
      - image: 'node:10'
        user: node
    steps: *releases
  lint:
    docker:
      - image: 'node:8'
        user: node
    steps:
      - checkout
      - run: *workflow_jobs
      - run: *unit_tests_steps
      - run:
          name: Run linting.
          command: npm run check
          environment:
            NPM_CONFIG_PREFIX: /home/node/.npm-global
  docs:
    docker:
      - image: 'node:8'
        user: node
    steps:
      - checkout
      - run: *workflow_jobs
      - run: *unit_tests_steps
      - run:
          name: Build documentation.
          command: npm run docs
  publish_npm:
    docker:
      - image: 'node:8'
        user: node
    steps:
      - checkout
      - run:
          name: Set NPM authentication.
          command: 'echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc'
      - run: *unit_tests_steps
      - run:
          name: Publish the module to npm.
          command: npm publish
